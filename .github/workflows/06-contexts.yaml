# Nome que vai aparecer na aba "Actions"
name: 06 - Contexts
run-name: 06 - Contexts | DEBUG - ${{ inputs.debug }}
# ENVS DE NÍVEL WORKFLOW
env:
  MY_WORKFLOW_VAR: 'workflow'
  MY_OVERWRITTEN_VAR: 'workflow'

on:
  # ADICIONE OS INPUTS AQUI
  workflow_dispatch:
    inputs:
      debug:
        type: boolean
        default: false

jobs:
  # Nome do nosso job
  echo-data:
    runs-on: ubuntu-latest
    env:
      MY_JOB_VAR: 'job'
      MY_OVERWRITTEN_VAR: 'job'
    steps:
      # 1º Passo: Exibir informações do contexto 'github'
      - name: Display Information
        run: |
          echo "Event name: ${{ github.event_name }}"
          echo "Ref: ${{ github.ref }}"
          echo "SHA: ${{ github.sha }}"
          echo "Actor: ${{ github.actor }}"
          echo "Workflow: ${{ github.workflow }}"
          echo "Run ID: ${{ github.run_id }}"
          echo "Run number: ${{ github.run_number }}"
      
      # 2º Passo: Recuperar a variável do repositório
      - name: Retrieve Variable
        run: |
          echo "MY_VAR: ${{ vars.MY_VAR }}"
      
       # 3º Passo: Imprimir envs
      - name: Print Env Variables 1
        # ENV DE NÍVEL STEP
        env:
          MY_OVERWRITTEN_VAR: 'step'
        run: |
          echo "Workflow env: ${{ env.MY_WORKFLOW_VAR }}"
          echo "Job env: ${{ env.MY_JOB_VAR }}"
          echo "Overwritten env: ${{ env.MY_OVERWRITTEN_VAR }}"

       # 4º Passo: Imprimir envs novamente
      - name: Print Env Variables 2
        run: |
          echo "Workflow env: ${{ env.MY_WORKFLOW_VAR }}"
          echo "Job env: ${{ env.MY_JOB_VAR }}"
          echo "Overwritten env: ${{ env.MY_OVERWRITTEN_VAR }}"